server {
    listen 80;
    server_name localhost;
    root /var/www/html;
    index index.php index.html;
    error_page 404 /404.html;
    location = /40x.html {
        root /var/www/html;
    }

    # pass the PHP scripts to FastCGI server listening on /var/run/php-fpm.sock
    #
    location ~ \.php$ {
        root   /var/www/html;
        add_header X-requested-domain $domain;

	# kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;

        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
    #    fastcgi_param HTTP_PROXY "";
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        fastcgi_index index.php;
        include fastcgi_params;
        #fastcgi_hide_header x-powered-by;
    }

    location ~* \.(htm|html|css|jpe?g|gif|png|js|ttf|woff|otf|eot|svg|json|woff2|mov|mp4|m4v|m4a|wma|wmv|bmp|tiff|yml|ico|pdf|docx|ppt|doc|pptx|xls|xlsx|zip|gz|ics|vcf|tar\.gz|mustache)$ {
        #static files
    }

    # deny access to . files, for security
    location ~ /\. {
        log_not_found off;
        deny all;
    }

}



server {
    listen 80;
    listen 443 default_server ssl;

    server_name   ~^((?<subdomain>.+?)\.)?(?<domain>.+)$;
    #server_name   ~^(www\.|local\.|dev\.|preview\.)?(?<domain>.+)$;
    root   /var/www/domains/$domain/local;

    index index.php index.html index.htm;

    # Disable sendfile as per https://docs.vagrantup.com/v2/synced-folders/virtualbox.html
    sendfile off;

    # this cert is for www.example.com, so it won't really work well
#    ssl_certificate /etc/nginx/ssl/server.crt;
#    ssl_certificate_key /etc/nginx/ssl/server.key;

    error_page 404 @error400;
    #/404.html;
    location @error400{
        add_header X-requested-domain $domain;
        root /var/www/html;
        try_files /404.html =404;
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        add_header X-requested-domain $domain;
        root /var/www/html;
    }

    location / {
        root   /var/www/domains/$domain/local;
        add_header X-requested-domain $domain;

        # kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;

        # First attempt to serve request as file, then
        # as directory, then fall back to index.html
        try_files $uri $uri/ /index.php?q=$uri&$args;
    }

    # pass the PHP scripts to FastCGI server listening on /var/run/php-fpm.sock
    #
    location ~ \.php$ {
        root   /var/www/domains/$domain/local;
        add_header X-requested-domain $domain;

        # kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;

        try_files $uri = /404.html;

        #handle PHP
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        fastcgi_intercept_errors on;
        fastcgi_index index.php;
        include fastcgi_params;
        #fastcgi_hide_header x-powered-by;
    }

    location ~* \.(htm|html|css|jpe?g|gif|png|js|ttf|woff|otf|eot|svg|json|woff2|mov|mp4|m4v|m4a|wma|wmv|bmp|tiff|yml|ico|pdf|docx|ppt|doc|pptx|xls|xlsx|zip|gz|ics|vcf|tar\.gz|mustache)$ {
        #static files

        # kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
    }

    # deny access to . files, for security
    location ~ /\. {
        log_not_found off;
        deny all;
    }

}